name: Deploy Loan Management DockerHub image to Digital Ocean and start the stack
on:
  release:
    types: [published]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v2
      # pull docker image from b33rsledge/loanmgmt:b001 to digital ocean swarm master defined by {secrets}
      - name: Pull docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SKYCAVEDROPLET_HOST }}
          username: ${{ secrets.SKYCAVEDROPLET_USERNAME }}
          password: ${{ secrets.SKYCAVEDROPLET_PASSWORD }}
          port:   ${{ secrets.SKYCAVEDROPLET_PORT }}
          script: |
            docker pull b33rsledge/loanmgmt:b001
      # redeploy docker stack on digital ocean swarm master defined by {secrets}
      - name: Start docker stack lmstack
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SKYCAVEDROPLET_HOST }}
          username: ${{ secrets.SKYCAVEDROPLET_USERNAME }}
          password: ${{ secrets.SKYCAVEDROPLET_PASSWORD }}
          port:   ${{ secrets.SKYCAVEDROPLET_PORT }}
          script: |
            docker stack deploy --with-registry-auth -c /usr/loanmgmt/lm-stack.yml lmstack

      # dockument in the build log that the services are indeed running on digital ocean swarm master defined by {secrets}
      - name: Inspect docker stack lmstack after restart
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SKYCAVEDROPLET_HOST }}
          username: ${{ secrets.SKYCAVEDROPLET_USERNAME }}
          password: ${{ secrets.SKYCAVEDROPLET_PASSWORD }}
          port:   ${{ secrets.SKYCAVEDROPLET_PORT }}
          script: |
            docker stack services lmstack